# .semaphore/semaphore.yml
# Use the latest stable version of Semaphore 2.0 YML syntax:
version: v1.0
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
# Name of your pipeline. In this example we connect two pipelines with
# a promotion, so it helps to differentiate what's the job of each.
name: Java Spring example CI pipeline on Semaphore

# An agent defines the environment in which your code runs.
# It is a combination of one of available machine types and operating
# system images. See:
# https://docs.semaphoreci.com/ci-cd-environment/machine-types/
# https://docs.semaphoreci.com/ci-cd-environment/ubuntu-18.04-image/
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

# Blocks are the heart of a pipeline and are executed sequentially.
# Each block has a task that defines one or more jobs. Jobs define the
# commands to execute.
# See https://docs.semaphoreci.com/essentials/concepts/
blocks:

  - name: "Build"
    task:
      # Set environment variables that your project requires.
      # See https://docs.semaphoreci.com/essentials/environment-variables/
      env_vars:
        - name: MAVEN_OPTS
          value: "-Dmaven.repo.local=.m2"

      jobs:
        - name: Build
          commands:
            # Checkout code from Git repository. This step is mandatory if the
            # job is to work with your code.
            - checkout

              # Restore dependencies from cache, command won't fail if it's
              # missing.
            # More on caching: https://docs.semaphoreci.com/essentials/caching-dependencies-and-directories/
            - cache restore

            - mvn -q package jmeter:configure -Dmaven.test.skip=true

              # Store the latest version of dependencies in cache,
            # to be used in next blocks and future workflows:
            - cache store

  - name: "Test"
    task:
      env_vars:
        - name: MAVEN_OPTS
          value: "-Dmaven.repo.local=.m2"


      # setup steps. We can group them in a prologue.
      # See https://docs.semaphoreci.com/reference/pipeline-yaml-reference/#prologue
      prologue:
        commands:
          - checkout
          - cache restore
          - mvn -q test-compile -Dmaven.test.skip=true
      jobs:
        - name: Unit tests
          commands:
            - mvn test
        - name: Integration tests
          commands:
            - mvn test -Pintegration-testing
